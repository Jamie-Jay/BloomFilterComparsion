Skip
to
content
Daniel
Lemire
blog
is
a
computer
science
professor
at
the
University
of
Quebec
TELUQ
in
Montreal
His
research
focused
on
software
performance
and
data
engineering
He
techno-optimist
My
home
page
papers
SUBSCRIBE
You
can
this
by
email
WHERE
FIND
ME
I
am
Twitter
GitHub
also
Google
Scholar
with
4k
citations
over
75
peer-reviewed
publications
Facebook
LinkedIn
Before
pandemic
2020
could
meet
person
as
was
organizing
regular
talks
open
public
tribalab
technolab
Search
for
SUPPORT
WORK
do
not
accept
any
advertisement
However
donations
through
paypal
Please
consider
getting
touch
if
are
supporter
so
that
thank
RECENT
POSTS
How
will
impact
programming
jobs
Technology
links
October
31st
What
heck
value
n
languages
Ridiculously
fast
unicode
UTF-8
validation
17th
COMMENTS
Leonid
Boytsov
Dominic
Amann
Andy
Setting
up
robust
Minecraft
server
Java
Edition
Raspberry
Pi
PAGES
short
history
About
Book
recommendations
Interviews
bets
favorite
articles
readers
sayings
Predictions
Terms
use
Write
good
ARCHIVES
Select
Month
BORING
STUFF
Log
Entries
feed
WordPressorg
Xor
Filters
Faster
Smaller
Than
Bloom
frequently
need
check
whether
some
objects
set
example
might
have
list
forbidden
Web
addresses
someone
enters
new
address
may
want
it
part
your
black
Or
maybe
large
already
used
passwords
proposed
password
compromised
standard
way
solve
problem
create
key-value
structure
enough
memory
hash
table
old
database
such
approaches
too
much
be
slow
small
quickly
filter
requests
had
tiny
reliably
tell
One
implement
would
compute
all
random-looking
number
generate
from
object
same
always
but
other
likely
numbers
Toronto
map
32
then
store
these
into
like
Hence
32-bit
each
possible
give
potential
its
corresponding
safe
Otherwise
send
request
larger
full
lookup
probability
vain
called
FALSE
positive
Though
approach
practical
end
using
4
bytes
per
come
rescue
works
similarly
except
several
values
indexes
inside
an
array
bits
When
adding
receive
belongs
just
been
practice
far
fewer
say
12
still
able
achieve
rate
less
1
While
textbook
algorithm
has
significant
downsides
major
needs
many
accesses
optimally
better
Yes
Among
alternatives
Fan
et
al
introduced
Cuckoo
which
space
implementing
relatively
simple
exercise
require
bit
more
we
even
limiting
code
something
hold
head
turns
out
published
paper
appear
Journal
Experimental
Algorithmics
following
figure
gives
entry
versus
offer
accuracy
given
budget
only
9
get
complete
implementation
Go
fits
300
lines
did
try
fact
semi-competent
coder
make
fit
within
200
optimized
C
version
easily
integrated
projects
since
single-header
contains
different
including
slightly
construction
wrote
demonstration
detection
takes
longer
build
once
built
uses
25
implementations
Rust
Python
Erlang
versions
meant
immutable
simply
rebuild
needed
update
keys
means
either
overallocating
initial
sacrificing
typically
dynamic
unlike
they
fixed
capacity
case
maximum
94
insertion
fail
solution
does
whole
thing
Deletions
generally
unsafe
principle
because
track
cannot
deal
collisions
without
access
two
mapping
going
difficult
delete
No
matter
must
somehow
keep
added
removed
itself
issue
play
building
element
information
yourself
Furthermore
concurrent
multiple
threads
safely
modify
querying
simplest
avoid
expensive
locks
mind
requires
temporary
released
immediately
after
compact
remains
few
stringent
requirements
regarding
usage
techniques
preferable
blocked
unbeatable
speed
expense
higher
really
their
best
high
tight
Credit
joint
Thomas
Mueller
Graf
basically
efficient
specialization
theoretical
Bloomier
View
38
thoughts
Max
De
Marzisays
December
20
2019
1205
until
checking
existing
relationships
back
REPLY
Lemiresays
1236
additions
general
probabilistically
close
greater
fallback
possibly
reconstruction
tests
abstracted
away
course
concurrency
via
locking
omitted
David
Andersensays
339
I’m
confused
know
item
It
surety
response
thread
Cool
quite
wished
there
designing
our
setsep
structures
fun
see
extended
Müller
Grafsays
947
pm
Sure
second
external
mutable
2
index
BDZ
MPHF
understand
exact
currently
stores
fingerprints
stored
well
known
reserve
very
common
Yurasays
706
contain
dublicate
amount
Therefore
certainly
were
deletion
Damien
Carolsays
202
pb
file
format
ORC
generated
can’t
modified
23
452
Yura
effect
TRUE
don’t
recover
455
Note
probabilistic
Maciej
Bilassays
0:00
Immutability
fine
forces
consumer
keys
8
available
func
Populate
keys
uint64
Xor
FromIteratornext
uint64
size
int
sense
122
afford
constructed
little
during
Ryansays
218
224
Justin
Chusays
0:00
big
overhead
couldn’t
idea
limited
skim
123
dependent
64
1227
Whoa
interesting
121
Couple
questions
FPP
segment
instead
three
suppose
take
time
successful
run
3
simplier
follow
alhorithm
ie
explicit
queue
segmentation
runs
significantly
attention
125
worse
segments
formula
easy
strategies
lot
room
optimization
232
suggest
quad
place
scheme
side
hash
reducehash
blocklength
blocklentgh
played
hashes
gave
comparable
result
average
achievable
load
factor
most
fetches
cache
here
places
should
fingerprint
tacken
independent
909
Nope
achieved
135
oversize
037-04
Xor8
points
Looks
Oops
yeah
shame
Allen
Downeysays
238
nice
typo
fall
Laurent
Querelsays
459
compare
Golomb-coded
sets
term
query
528
GCS
Frank
Rehwinkelsays
21
519
makes
inspired
parts
starts
finding
least
doesn’t
unencumbered
cell
peels
hopefully
unencumbering
cells
luck
pulled
finalized
reverse
order
guarantees
location
necessary
turn
haven’t
simulations
yet
surprised
random
tried
solved
first
seed
trying
seeds
wonder
lengths
preserved
long
derivation
tries
successively
shorter
comment
around
splitmix64
function
period
duplicates
detect
Timings
cycles
running
regardless
tens
key
got
10M
point
150ns
rebuilding
often
cost
low
Thanks
providing
golang
Made
doubling
byte
half
word
increase
items
reduces
chance
256
64K
Jurnisssays
830
third
paragraph
sentence
seems
incomplete
statement
covered
none
guess
prataprcsays
614
concise
port
rust-lang
croaring
bitmap
indexing
library
quick
comparison
between
xorfilter
MacBookPro
3-Feb
times
CPU-performance
improvement
Ref
Polochon_streetsays
26
212
idiomatic
beat
Eelissays
1118
membership
test
defined
section
31
evaluates
h
x
U
previous
S
subset
overlooking
456
catch
found
variant
algo
puts
lookups
single
line
BitsPerValue
almost
original
non-plus
128x
vs
123x
put
rank9
equal
twice
lesser
Changes
demonstrated
variang
actual
statistic
calculation
fixes
closer
intended
January
16
335
failure
release
mode
due
assertion
let
matches
1000
falsesize
f64
println
assertfpp
40
Below
output
stdout
9864
4027
teststest_basic2
panicked
RUST_BACKTRACE1
environment
variable
display
backtrace
relax
false-positive-rate
50
411
increasing
suspect
poor
estimation
false-positive
17
332
Increased
consistently
stays
4000%
827
document
sizing
requirement
hope
correct
1Billion
50GB
footprint
suggestion
handle
DGM
Disk-Greater-than-Memory
scenarios
103
think
computing
upper
bound
lower
150
cover
worst
scenario
lead
OOM
crunch
working
finger_print
alone
beyong
9GB
billion
mmap
xor-filter
420
discussion
important
establish
context
storing
integers
GB
start
having
anything
gigabytes
required
Ole-Hjalmar
Kristensensays
22
1221
actually
extra
storage
construct
incrementally
main
tracking
definitely
content-addressable
ratio
positives
goes
insert
critical
application
gigabyte
said
great
242
remove
eg
garbage
collection
Apache
Jackrabbit
Oak
approximate
Leave
fields
marked
NAME
WEBSITE
Save
browser
next
NOTIFICATIONS
instantly
commenting
Post
navigation
look
2010
21st
Proudly
powered
WordPress
